@model PaginatedList<EstrelaDaMorte_MVC.Models.Nave>

@{
    ViewData["Title"] = "Index";
}

<h2>Lista de Naves</h2>

<p>
    <a asp-action="Create">Criar nova Nave.</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Pesquisa: <br /><input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Digite um Nome!"/>
            <input type="submit" value="Procurar" class="btn btn-outline-dark" />
            <br />
            <a asp-action="Index">Voltar a Lista Completa</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">ID</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nome</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ModeloSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Modelo</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PassageirosSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Passageiros</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CargaSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Carga</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ClasseSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Classe</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.NaveId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Modelo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Passageiros)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Carga)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Classe)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.NaveId">Editar</a> |
                    <a asp-action="Details" asp-route-id="@item.NaveId">Detalhes</a> |
                    <a asp-action="Delete" asp-route-id="@item.NaveId">Deletar</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{ 
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : ""; 
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-dark @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-dark @nextDisabled">
    Next
</a>